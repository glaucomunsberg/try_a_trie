##########################################################################
#                       Try a trie - Trabalho de EDII
##########################################################################
#
# 1.Introduçao
# 2.Como foi programado
# 3.Como executar execução
# 4.Resultados obtidos
# 5.Manifesto
#
# @autor   Glauco Roberto Munsberg dos Santos
# @github  git@github.com:glaucomunsberg/try_a_trie.git
# @version 0.9
#
##########################################################################
# 1.Introduçao
##########################################################################
#
#   O projeto Try_a_trie é o resultado do trabalho proposto pelo Professor
#   Ricardo Araújo na disciplina de EDII. A especificação do trabalho se
#   encontra dividido em tuas parte. Um de criação de uma árvore Trie: URL
#   http://avainstitucional.ufpel.edu.br/mod/assignment/view.php?id=10135
#   e a segunda parte do trabalho, referente a procura da maior palindroma
#   encotra-se na URL: 
#   http://avainstitucional.ufpel.edu.br/mod/assignment/view.php?id=30353
#   desenvolvido de 15 de Abril de 2012 a 8 de junho de 2012
#   O trabalho foi versionado no GitHub como apoio a programação, para
#   maior detalhamento das versoes consulte o arquivo "version.txt". O
#   trabalho foi programado e testado em um computador:
#    * Pentium Dual Core 2.2GHz
#    * 2,5GB Memória RAM
#    * Ubuntu 12.04 32-bits, área de troca de 1Gb para auxílio, com Java7
#      e demais configurações padrões.
#
##########################################################################
# 2.Como foi programado
##########################################################################
#
##########################################################################
# 3.Como executar execução
##########################################################################
#
##########################################################################
# 4.Resultados obtidos
##########################################################################
#
#   Abaixo temos alguns dos resultados obtidos pelas simulações, não
#   sendo aqui mensionadas as simulações de teste realizadas anteriormente
#   a verificação dos resultados iguais entre a de saída esperada com a
#   saída resultante da execução do programa.
#
# 4.1 Simulações com a árvore trie
# 4.1.1 Simulação 1
#   O programa rodou durante 0.3 segundos executando 1000 operações entre
#   inserir, remover e buscar. Foi utilizado 1mil palavras de 1 até 100
#   letras repeitando a aleatóriedade. Para isso foi utilizado uma MVJ
#   de no mínimo 500Mb de Memória e até no máximo 1Gb, obtendo resultado
#   satisfatório
#   Dados:
#     Nº de Palavras   : 100
#     Tamanho Max. pal : 1000
#     Nº de pal. exec  : 1mil
#     Tempo de execução: 0.3s
#     Finalizou execu  : Sim
# 4.1.2 Simulação 2
#   Simulação inversa a 4.1.1 sendo 100 palavras de até 1000.
#   Dados:
#     Nº de Palavras   : 100
#     Tamanho Max. pal : 1000
#     Nº de pal. exec  : 100
#     Tempo de execução: 0.3s
#     Finalizou execu  : Sim
# 4.1.3 Sumulação 3
#   Simulação realizada com a mesma confi da 4.1.1 e 4.1.2, executando um
#   teste de força com uma única palavra de 25mil caractéres inserida,
#   buscada, removida, buscada, inserida, buscada e removida, nesta ordem,
#   com sucesso
#   Dados:
#     Nº de Palavras   : 2
#     Tamanho da pal   : 25mil
#     Nº de pal. exec  : 7
#     Tempo de execução: 0.35s
#     Finalizou execu  : Sim
# 4.1.4 Simulação 2
#   O programa rodou durante 190 minutos executando 2411 operações entre
#   inserir, remover e buscar. Foi utilizado 10mil palavras de 1 até 1000
#   letras respeitando a aleatóriedade. Para isso foi utilizado uma MVJ
#   de no mínimo 2Gb de Memória e até no máximo 2,5Gb, porém o processo
#   foi morto pelo sistema por falta de memória, mas até a posição final
#   da execução o resultado foi identico ao esperado.
#   Dados:
#     Nº de Palavras   : 10mil
#     Nº de pal. exec  : 2411
#     Tempo de execução: 190min
#     Finalizou execu  : Não
#
##########################################################################
# 5.Manifesto
##########################################################################
#

